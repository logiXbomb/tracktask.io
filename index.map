{"version":3,"sources":["../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js","../node_modules/uuid/index.js","index.js"],"names":["getItem","key","json","localStorage","result","JSON","parse","map","r","status","e","setItem","stringify","getTasks","setTasks","node","document","getElementById","tl","activeTask","length","id","app","Elm","Main","init","flags","tasks","ports","addTask","subscribe","taskList","push","title","updateTaskList","send","saveTaskList","moveTaskUp","index","findIndex","t","newIndex","i","moveTaskDown","setStatus","window","addEventListener","evt","prompt"],"mappings":"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","file":"index.map","sourceRoot":"src","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import uuid from 'uuid';\nimport { Elm } from './Main.elm';\n\nconst getItem = key => () => {\n\tconst json = localStorage.getItem(key);\n\tif (json) {\n\t\ttry {\n\t\t\tconst result = JSON.parse(json);\n\t\t\treturn result.map(r => {\n\t\t\t\tif (!r.status) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...r,\n\t\t\t\t\t\tstatus: '',\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n\nconst setItem = key => json => {\n\tlocalStorage.setItem(key, JSON.stringify(json));\n}\n\nconst getTasks = getItem('tasks');\n\nconst setTasks = setItem('tasks');\n\nconst node = document.getElementById('app');\n\nconst tl = getTasks() || [];\nlet activeTask = \"\";\nif (tl && tl.length && tl.length > 0) {\n\tactiveTask = tl[0].id;\n}\n\nconst app = Elm.Main.init({\n\tnode,\n\tflags: {\n\t\tactiveTask,\n\t\ttasks: tl,\n\t},\n});\n\nconst ports = app.ports;\n\nif (ports && ports.addTask) {\n\tports.addTask.subscribe(() => {\n\t\tconst taskList = getTasks() || [];\n\n\t\tconst activeTask = uuid();\n\n\t\ttaskList.push({ id: activeTask, title: '' });\n\n\t\tsetTasks(taskList);\n\n\t\tif (ports && ports.updateTaskList) {\n\t\t\tports.updateTaskList.send({\n\t\t\t\ttaskList,\n\t\t\t\tactiveTask,\n\t\t\t});\n\t\t}\n\t});\n}\n\nif (ports && ports.saveTaskList) {\n\tports.saveTaskList.subscribe(setTasks);\n}\n\nif (ports && ports.moveTaskUp) {\n\tports.moveTaskUp.subscribe(activeTask => {\n\t\tconst tl = getTasks();\n\t\t\n\t\tconst index = tl.findIndex(t => t.id === activeTask);\n\t\tconst newIndex = index - 1;\n\n\t\tconst taskList = [];\n\n\t\tfor (let i = 0; i < tl.length; i++) {\n\t\t\tif (i === newIndex) {\n\t\t\t\ttaskList.push(tl[index]);\n\t\t\t} else if (i === index) {\n\t\t\t\ttaskList.push(tl[newIndex]);\n\t\t\t} else {\n\t\t\t\ttaskList.push(tl[i]);\n\t\t\t}\n\t\t}\n\n\t\tsetTasks(taskList);\n\n\t\tif (ports && ports.updateTaskList) {\n\t\t\tports.updateTaskList.send({\n\t\t\t\ttaskList,\n\t\t\t\tactiveTask,\n\t\t\t});\n\t\t}\n\t});\n}\n\nif (ports && ports.moveTaskDown) {\n\tports.moveTaskDown.subscribe(activeTask => {\n\t\tconst tl = getTasks();\n\t\t\n\t\tconst index = tl.findIndex(t => t.id === activeTask);\n\t\tconst newIndex = index + 1;\n\n\t\tconst taskList = [];\n\n\t\tfor (let i = 0; i < tl.length; i++) {\n\t\t\tif (i === newIndex) {\n\t\t\t\ttaskList.push(tl[index]);\n\t\t\t} else if (i === index) {\n\t\t\t\ttaskList.push(tl[newIndex]);\n\t\t\t} else {\n\t\t\t\ttaskList.push(tl[i]);\n\t\t\t}\n\t\t}\n\n\t\tsetTasks(taskList);\n\n\t\tif (ports && ports.updateTaskList) {\n\t\t\tports.updateTaskList.send({\n\t\t\t\ttaskList,\n\t\t\t\tactiveTask,\n\t\t\t});\n\t\t}\n\t});\n}\n\nif (ports && ports.setStatus) {\n\tports.setStatus.subscribe(({ activeTask, status }) => {\n\t\tlet taskList = getTasks();\n\t\ttaskList = taskList.map(t => {\n\t\t\tif (t.id === activeTask) {\n\t\t\t\treturn { ...t,\n\t\t\t\t\tstatus,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn t;\n\t\t});\n\t\tsetTasks(taskList);\n\t\tports.updateTaskList.send({\n\t\t\ttaskList,\n\t\t\tactiveTask,\n\t\t})\n\t});\n}\n\nwindow.addEventListener('beforeinstallprompt', evt => {\n\tevt.prompt();\n});\n"]}